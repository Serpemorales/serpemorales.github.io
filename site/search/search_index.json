{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"practica2_1/","title":"Pr\u00e1ctica 2.1 - Instalaci\u00f3n y configuraci\u00f3n de servidor web Nginx","text":""},{"location":"practica2_1/#instalacion-servidor-web-nginx","title":"Instalaci\u00f3n servidor web nginx","text":"<p>Primero tenemos que instalar el servidor nginx, actualizando los repositorios e instal\u00e1ndolo desde la consola.</p> <p></p>"},{"location":"practica2_1/#creacion-de-la-carpeta-del-sitio-web","title":"Creaci\u00f3n de la carpeta del sitio web","text":"<p>Todos los archivos que forman parte del sitio web tendr\u00e1n que organizarse en carpetas, que normalmente las encontramos en /var/www.</p> <p>Creamos el directorio sin mayor problema, y una vez creado, nos aseguramos de que tenemos git instalado para poder clonar el repositorio de github proporcionado.</p> <p></p> <p>Tras clonar el repositorio, haremos que el propietario de la carpeta y todo lo de dentro sera el usuario www-data, utilizando los siguientes comandos.</p> <p></p> <p>Si todo ha salido bien, utilizando la IP de la maquina virtual, nos permitir\u00e1 acceder a una web donde se muestra un mensaje</p> <p></p>"},{"location":"practica2_1/#configuracion-del-servidor-web-nginx","title":"Configuraci\u00f3n del servidor web NGINX","text":"<p>En Nginx hay dos rutas importantes, tenemos sites-available, la cual tiene los archivos de configuraci\u00f3n de hosts virtuales o los bloques disponibles en el servidor. La otra es sites-enabled, que contiene los archivos de configuraci\u00f3n de los sitios habilitados.</p> <p>Para que Nginx presente el contenido de nuestra propia web, tenemos que crear un bloque de servidor con todas las directivas correctas, y lo haremos modificando el archivo de configuraci\u00f3n predeterminado, utilizando la consola.</p> <p></p> <p>Despu\u00e9s, crearemos un archivo simb\u00f3lico entre el archivo y el de los sitios habilitados.</p> <p></p> <p>Reiniciamos el servidor, para asegurarnos de que se aplica toda la nueva configuraci\u00f3n</p> <p></p>"},{"location":"practica2_1/#comprobaciones","title":"Comprobaciones","text":"Comprobaci\u00f3n del correcto funcionamiento <p>Como no tenemos un servidor DNS, tendremos que hacerlo de manera manual. Para ello, tenemos que editar el archivo que se encuentra en /etc/hosts de nuestra maquina principal, a\u00f1adiendo al archivo la siguiente l\u00ednea</p> <p></p> Comprobaci\u00f3n de los registros del servidor <p>Para ver que todo se esta registrando correctamente en los logs, vamos a utilizar dos comandos en la consola que nos dar\u00e1n acceso a estos.</p> <p></p> <p></p>"},{"location":"practica2_1/#ftp","title":"FTP","text":"<p>Vamos a configurar el protocolo de transferencia de archivos FPT, que es una manera de transferir a trav\u00e9s de una red TCP.</p> <p>En nuestro caso, vamos a configurar un servidor SFTP, que es lo mismo pero a\u00f1adiendo una capa de seguridad y privacidad al propio FTP.</p> Configurar servidor SFTP en Debian <p>Primero instalamos todo desde los siguientes repositorios.</p> <p> Despu\u00e9s creamos una carpeta en el home de Debian</p> <p></p> <p>Ahora tenemos que crear unos certificados de seguridad que son necesarios para aportar la capa de cifrado a la conexi\u00f3n. </p> <p></p> <p>Ya terminados estos pasos, vamos a realizar la configuraci\u00f3n del propio vsftpd, en mi caso he utilizado nano como editor de texto, borrando las l\u00edneas de archivo</p> <pre><code>rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\nrsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\nssl_enable=NO\n</code></pre> <p>Para a\u00f1adir otras en su lugar</p> <p></p> <p>Guardamos cambios del archivo, y volvemos a reiniciar para que coja la configuraci\u00f3n nueva que hemos a\u00f1adido.</p> <p></p> <p>Tras todo esto, ya podemos acceder al servidor, y para ello vamos a necesitar un cliente FTP, en mi caso, he descargado Filezilla</p> <p></p> <p>Una vez instalado, podemos conectarnos de manera insegura con el puerto 21, o con el 22, en mi caso, prob\u00e9 primero el 21 y despu\u00e9s el 22, introduciendo los datos necesarios para conectar al servidor.</p> <p></p> <p>Tras darla a conexi\u00f3n r\u00e1pida saldr\u00e1 un aviso, le daremos a aceptar sin ning\u00fan problema.</p> <p></p> <p>Utilizando las carpetas de la parte izquierda, nos aseguraremos de subir un archivo a la carpeta FTP del servidor, en mi caso, como prueba he subido una imagen</p> <p></p> <p>Para probar que todo ha ido bien, volvemos a la m\u00e1quina virtual, y deber\u00edamos tener all\u00ed el archivo transferido</p> <p></p>"},{"location":"practica2_1/#https","title":"HTTPS","text":"<p>Vamos a a\u00f1adir al servidor una capa de seguridad extra y necesaria, para obligar a nuestros sitios web a hacer uso de los certificados SSL y acceder a ellos mediante HTTPS.</p> <p>Lo primero que hacemos es generar los certificados autofirmados</p> <p></p> <p>Y despu\u00e9s, debemos ir al fichero de configuraci\u00f3n del host virtual, para cambiar los par\u00e1metros de la siguiente manera, asegur\u00e1ndonos de que si entramos por HTTP nos redirigir\u00e1 autom\u00e1ticamente al HTTPS</p> <p></p> <p>Para comprobarlo, vamos a intentar entrar en la web, y vemos que efectivamente, nos redirige a la web HTTPS.</p> <p></p>"},{"location":"practica2_1/#cuestiones","title":"Cuestiones","text":"Cuesti\u00f3n 1  &gt; \u00bfQu\u00e9 pasa si no hago el link simb\u00f3lico entre `sites-available` y &gt; `sites-enabled` de mi sitio web?  Si no realizamos el link simb\u00f3lico, no se dar\u00e1 de alta autom\u00e1ticamente nuestra configuraci\u00f3n y no ser\u00e1 activada, pues Nginx busca las configuraciones activas una vez est\u00e1n enlazadas. Cuesti\u00f3n 2  &gt; \u00bfQu\u00e9 pasa si no le doy los permisos adecuados a `/var/www/nombre_web`?  Si no le damos los permisos adecuados, nos dar\u00e1 un error de acceso no autorizado cuando intentemos entrar en la p\u00e1gina web. B\u00e1sicamente, nuestra web no funcionar\u00e1 correctamente."},{"location":"practica2_2/","title":"Pr\u00e1ctica 2.2 - Autenticaci\u00f3n en Nginx","text":""},{"location":"practica2_2/#comprobacion-de-paquetes","title":"Comprobaci\u00f3n de Paquetes","text":"<p>Primero, comprobamos que los paquetes necesarios est\u00e1n instalados. En mi caso lo est\u00e1n.</p> <p></p>"},{"location":"practica2_2/#creacion-de-usuarios-y-contrasenas-para-el-acceso-web","title":"Creaci\u00f3n de usuarios y contrase\u00f1as para el acceso web","text":"<p>Vamos a crear un archivo oculto que se llama .htpasswd. Lo vamos a crear en el directorio de configuraci\u00f3n /etc/nginx donde se pueda guardar el usuario y la contrase\u00f1a. Como se puede repetir con tantos usuarios como haga falta, lo he realizado con mi nombre y mi apellido.</p> <p> </p> <p>Compruebo que todo est\u00e9 correcto.</p> <p></p>"},{"location":"practica2_2/#configurando-el-servidor-nginx-para-usar-autenticacion-basica","title":"Configurando el servidor Nginx para usar autenticaci\u00f3n b\u00e1sica","text":"<p>Lo primero va a ser configurar nuestra web para a\u00f1adir la directiva auth_basic y as\u00ed proteger la web.</p> <p></p> <p>Una vez guardada la configuraci\u00f3n, reiniciamos el servidor</p> <p></p>"},{"location":"practica2_2/#probando-la-nueva-configuracion","title":"Probando la nueva configuraci\u00f3n","text":"<p>Tras esto, he comprobado que desde mi m\u00e1quina f\u00edsica he podido acceder al sitio y me ha pedido autentificaci\u00f3n</p> <p></p> <p>Y si cancelo la autentificaci\u00f3n sale el error 401</p> <p></p> <p>Ahora, para la Tarea 1, he intentado entrar con un usuario err\u00f3neo, y luego con uno correcto.</p> <p>Accedo a los log de acceso y error para que se vean ambos intentos.</p> <p>En el de acceso vemos como nos muestra que no hay ning\u00fan problema</p> <p></p> <p>Mientras que en el de error vemos que nos dice que no se ha encontrado ese usuario en el archivo que creamos, dando lugar a que no pueda autentificarse.</p> <p></p> <p>Despu\u00e9s hemos tenido que configurar para que el servidor solo bloquee cierta parte de la web. En nuestro caso, no podemos bloquear solo contact, por lo que hice el ejemplo con el propio index.</p> <p></p>"},{"location":"practica2_2/#combinacion-de-la-autenticacion-basica-con-restriccion-por-ip","title":"Combinaci\u00f3n de la autenticaci\u00f3n b\u00e1sica con restricci\u00f3n por IP","text":"<p>Tambi\u00e9n tenemos la opci\u00f3n de permitir o denegar la entrada a la web a partir de las IP. con las directivas allow y deny. Adem\u00e1s, podemos tambi\u00e9n hacer que sea necesario tanto autentificarse con el usuario como tener la IP correcta.</p> <p>En la Tarea 1 de esta secci\u00f3n, ten\u00edamos que prohibir el acceso con la IP de la m\u00e1quina anfitriona, y comprobar que el acceso fuese denegado.</p> <p></p> <p>Y efectivamente, nos sale un error 403 cuando intentamos entrar</p> <p></p> <p>Tambi\u00e9n podemos ver el propio mensaje de error en el error.log</p> <p></p> <p>Para finalizar, configuramos para que necesitemos acceder desde la m\u00e1quina anfitriona tanto con una IP v\u00e1lida como con el usuario, ambas cosas a la vez. Tras poner las directivas, lo compruebo y funciona perfectamente.</p> <p></p> <p></p>"},{"location":"practica2_2/#cuestiones-finales","title":"Cuestiones finales","text":"<p>Cuestion 1</p> <p>Supongamos que yo soy el cliente con la IP 172.1.10.15 e intento acceder al directorio <code>web_muy_guay</code> de mi sitio web, equivoc\u00e1ndome al poner el usuario y contrase\u00f1a. \u00bfPodr\u00e9 acceder? \u00bfPor qu\u00e9?</p> <pre><code>    location /web_muy_guay {\n    #...\n    satisfy all;    \n    deny  172.1.10.6;\n    allow 172.1.10.15;\n    allow 172.1.3.14;\n    deny  all;\n    auth_basic \"Cuesti\u00f3n final 1\";\n    auth_basic_user_file conf/htpasswd;\n}\n</code></pre> <p>No se podr\u00e1, porque nos est\u00e1 pidiendo que tenemos que utilizar tanto una IP correcta como un usuario.</p> <p>Cuestion 2</p> <p>Supongamos que yo soy el cliente con la IP 172.1.10.15 e intento acceder al directorio <code>web_muy_guay</code> de mi sitio web, introduciendo correctamente usuario y contrase\u00f1a. \u00bfPodr\u00e9 acceder?\u00bfPor qu\u00e9?</p> <pre><code>    location /web_muy_guay {\n    #...\n    satisfy all;    \n    deny  all;\n    deny  172.1.10.6;\n    allow 172.1.10.15;\n    allow 172.1.3.14;\n\n    auth_basic \"Cuesti\u00f3n final 2: The revenge\";\n    auth_basic_user_file conf/htpasswd;\n    } \n</code></pre> <p>Si podremos acceder, ya que pese al deny all, se permite el acceso a nuestra IP, y adem\u00e1s, hemos introducido el usuario y contrase\u00f1a de manera correcta.</p> <p>Cuestion 3</p> <p>Supongamos que yo soy el cliente con la IP 172.1.10.15 e intento acceder al directorio <code>web_muy_guay</code> de mi sitio web, introduciendo correctamente usuario y contrase\u00f1a. \u00bfPodr\u00e9 acceder?\u00bfPor qu\u00e9?</p> <pre><code>    location /web_muy_guay {\n    #...\n    satisfy any;    \n    deny  172.1.10.6;\n    deny 172.1.10.15;\n    allow 172.1.3.14;\n\n    auth_basic \"Cuesti\u00f3n final 3: The final combat\";\n    auth_basic_user_file conf/htpasswd;\n}\n</code></pre> <p>No podremos acceder, puesto que aunque la directiva sea satisfy any, nuestra IP est\u00e1 denegada, y esa restricci\u00f3n tiene prioridad y bloquea el acceso.</p> <p>Cuestion 4</p> <p>Supongamos que quiero restringir el acceso al directorio de proyectos porque es muy secreto, eso quiere decir a\u00f1adir autenticaci\u00f3n b\u00e1sica a la secci\u00f3n de proyectos.</p> <p>Completa la configuraci\u00f3n para conseguirlo:</p> <pre><code>    server {\n        listen 80;\n        listen [::]:80;\n        root /var/www/freewebsitetemplates.com/preview/space-science;\n        index index.html index.htm index.nginx-debian.html;\n        server_name freewebsitetemplates.com www.freewebsitetemplates.com;\n        location              {\n\n            try_files $uri $uri/ =404;\n        }\n        location /Proyectos {\n            auth_basic \"\u00c1rea restringida\";\n            auth_basic_user_file /etc/nginx/.htpasswd;\n            try_files $uri $uri/ =404\u00e7\n        }\n    }\n</code></pre>"}]}