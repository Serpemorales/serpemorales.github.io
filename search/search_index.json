{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"practica2_1/","text":"Pr\u00e1ctica 2.1 - Instalaci\u00f3n y configuraci\u00f3n de servidor web Nginx Instalaci\u00f3n servidor web nginx Primero tenemos que instalar el servidor nginx, actualizando los repositorios e instal\u00e1ndolo desde la consola. Creaci\u00f3n de la carpeta del sitio web Todos los archivos que forman parte del sitio web tendr\u00e1n que organizarse en carpetas, que normalmente las encontramos en /var/www . Creamos el directorio sin mayor problema, y una vez creado, nos aseguramos de que tenemos git instalado para poder clonar el repositorio de github proporcionado. Tras clonar el repositorio, haremos que el propietario de la carpeta y todo lo de dentro sera el usuario www-data , utilizando los siguientes comandos. Si todo ha salido bien, utilizando la IP de la maquina virtual, nos permitir\u00e1 acceder a una web donde se muestra un mensaje Configuraci\u00f3n del servidor web NGINX En Nginx hay dos rutas importantes, tenemos sites-available , la cual tiene los archivos de configuraci\u00f3n de hosts virtuales o los bloques disponibles en el servidor. La otra es sites-enabled , que contiene los archivos de configuraci\u00f3n de los sitios habilitados. Para que Nginx presente el contenido de nuestra propia web, tenemos que crear un bloque de servidor con todas las directivas correctas, y lo haremos modificando el archivo de configuraci\u00f3n predeterminado, utilizando la consola. Despu\u00e9s, crearemos un archivo simb\u00f3lico entre el archivo y el de los sitios habilitados. Reiniciamos el servidor, para asegurarnos de que se aplica toda la nueva configuraci\u00f3n Comprobaciones Comprobaci\u00f3n del correcto funcionamiento Como no tenemos un servidor DNS, tendremos que hacerlo de manera manual. Para ello, tenemos que editar el archivo que se encuentra en /etc/hosts de nuestra maquina principal, a\u00f1adiendo al archivo la siguiente l\u00ednea Comprobaci\u00f3n de los registros del servidor Para ver que todo se esta registrando correctamente en los logs, vamos a utilizar dos comandos en la consola que nos dar\u00e1n acceso a estos. FTP Vamos a configurar el protocolo de transferencia de archivos FPT, que es una manera de transferir a trav\u00e9s de una red TCP. En nuestro caso, vamos a configurar un servidor SFTP, que es lo mismo pero a\u00f1adiendo una capa de seguridad y privacidad al propio FTP. Configurar servidor SFTP en Debian Primero instalamos todo desde los siguientes repositorios. Despu\u00e9s creamos una carpeta en el home de Debian Ahora tenemos que crear unos certificados de seguridad que son necesarios para aportar la capa de cifrado a la conexi\u00f3n. Ya terminados estos pasos, vamos a realizar la configuraci\u00f3n del propio vsftpd, en mi caso he utilizado nano como editor de texto, borrando las l\u00edneas de archivo rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key ssl_enable=NO Para a\u00f1adir otras en su lugar Guardamos cambios del archivo, y volvemos a reiniciar para que coja la configuraci\u00f3n nueva que hemos a\u00f1adido. Tras todo esto, ya podemos acceder al servidor, y para ello vamos a necesitar un cliente FTP, en mi caso, he descargado Filezilla Una vez instalado, podemos conectarnos de manera insegura con el puerto 21, o con el 22, en mi caso, prob\u00e9 primero el 21 y despu\u00e9s el 22, introduciendo los datos necesarios para conectar al servidor. Tras darla a conexi\u00f3n r\u00e1pida saldr\u00e1 un aviso, le daremos a aceptar sin ning\u00fan problema. Utilizando las carpetas de la parte izquierda, nos aseguraremos de subir un archivo a la carpeta FTP del servidor, en mi caso, como prueba he subido una imagen Para probar que todo ha ido bien, volvemos a la m\u00e1quina virtual, y deber\u00edamos tener all\u00ed el archivo transferido HTTPS Vamos a a\u00f1adir al servidor una capa de seguridad extra y necesaria, para obligar a nuestros sitios web a hacer uso de los certificados SSL y acceder a ellos mediante HTTPS. Lo primero que hacemos es generar los certificados autofirmados Y despu\u00e9s, debemos ir al fichero de configuraci\u00f3n del host virtual, para cambiar los par\u00e1metros de la siguiente manera, asegur\u00e1ndonos de que si entramos por HTTP nos redirigir\u00e1 autom\u00e1ticamente al HTTPS Para comprobarlo, vamos a intentar entrar en la web, y vemos que efectivamente, nos redirige a la web HTTPS. Cuestiones Cuesti\u00f3n 1 > \u00bfQu\u00e9 pasa si no hago el link simb\u00f3lico entre `sites-available` y > `sites-enabled` de mi sitio web? Si no realizamos el link simb\u00f3lico, no se dar\u00e1 de alta autom\u00e1ticamente nuestra configuraci\u00f3n y no ser\u00e1 activada, pues Nginx busca las configuraciones activas una vez est\u00e1n enlazadas. Cuesti\u00f3n 2 > \u00bfQu\u00e9 pasa si no le doy los permisos adecuados a `/var/www/nombre_web`? Si no le damos los permisos adecuados, nos dar\u00e1 un error de acceso no autorizado cuando intentemos entrar en la p\u00e1gina web. B\u00e1sicamente, nuestra web no funcionar\u00e1 correctamente. --- ![Firma Sergio](../assets/images/yuki_dev.png)","title":"Pr\u00e1ctica 2.1"},{"location":"practica2_1/#practica-21-instalacion-y-configuracion-de-servidor-web-nginx","text":"","title":"Pr\u00e1ctica 2.1 - Instalaci\u00f3n y configuraci\u00f3n de servidor web Nginx"},{"location":"practica2_1/#instalacion-servidor-web-nginx","text":"Primero tenemos que instalar el servidor nginx, actualizando los repositorios e instal\u00e1ndolo desde la consola.","title":"Instalaci\u00f3n servidor web nginx"},{"location":"practica2_1/#creacion-de-la-carpeta-del-sitio-web","text":"Todos los archivos que forman parte del sitio web tendr\u00e1n que organizarse en carpetas, que normalmente las encontramos en /var/www . Creamos el directorio sin mayor problema, y una vez creado, nos aseguramos de que tenemos git instalado para poder clonar el repositorio de github proporcionado. Tras clonar el repositorio, haremos que el propietario de la carpeta y todo lo de dentro sera el usuario www-data , utilizando los siguientes comandos. Si todo ha salido bien, utilizando la IP de la maquina virtual, nos permitir\u00e1 acceder a una web donde se muestra un mensaje","title":"Creaci\u00f3n de la carpeta del sitio web"},{"location":"practica2_1/#configuracion-del-servidor-web-nginx","text":"En Nginx hay dos rutas importantes, tenemos sites-available , la cual tiene los archivos de configuraci\u00f3n de hosts virtuales o los bloques disponibles en el servidor. La otra es sites-enabled , que contiene los archivos de configuraci\u00f3n de los sitios habilitados. Para que Nginx presente el contenido de nuestra propia web, tenemos que crear un bloque de servidor con todas las directivas correctas, y lo haremos modificando el archivo de configuraci\u00f3n predeterminado, utilizando la consola. Despu\u00e9s, crearemos un archivo simb\u00f3lico entre el archivo y el de los sitios habilitados. Reiniciamos el servidor, para asegurarnos de que se aplica toda la nueva configuraci\u00f3n","title":"Configuraci\u00f3n del servidor web NGINX"},{"location":"practica2_1/#comprobaciones","text":"","title":"Comprobaciones"},{"location":"practica2_1/#ftp","text":"Vamos a configurar el protocolo de transferencia de archivos FPT, que es una manera de transferir a trav\u00e9s de una red TCP. En nuestro caso, vamos a configurar un servidor SFTP, que es lo mismo pero a\u00f1adiendo una capa de seguridad y privacidad al propio FTP.","title":"FTP"},{"location":"practica2_1/#https","text":"Vamos a a\u00f1adir al servidor una capa de seguridad extra y necesaria, para obligar a nuestros sitios web a hacer uso de los certificados SSL y acceder a ellos mediante HTTPS. Lo primero que hacemos es generar los certificados autofirmados Y despu\u00e9s, debemos ir al fichero de configuraci\u00f3n del host virtual, para cambiar los par\u00e1metros de la siguiente manera, asegur\u00e1ndonos de que si entramos por HTTP nos redirigir\u00e1 autom\u00e1ticamente al HTTPS Para comprobarlo, vamos a intentar entrar en la web, y vemos que efectivamente, nos redirige a la web HTTPS.","title":"HTTPS"},{"location":"practica2_1/#cuestiones","text":"","title":"Cuestiones"}]}